akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

akka.http{
  server {
    remote-address-header = on
  }
  host-connection-pool.max-open-requests = 128
}

app {
  deferred-requests {
    worker-count = 4   # ensure there are some connections left in pool for other tasks, too!
    default-timeout = 180s
    cleanup-job-interval = 1800s
    requests="long-req1, long-req2"
    timeouts {
      long-req3 = 60s
    }
    files.path = "<path to deferred results storage directory>"
    file-info-table = deferred_file_info
    file-body-info-table = deferred_file_body_info
  }
  rest-client{
    request-timeout = 1m
    await-timeout = 1m
  }
  files.path = "<path to attachment directory>"
  log.path = "<path to log directory>"
}

jdbc {
  query-timeout = 5s
}

# JDBC connection pools, see https://github.com/brettwooldridge/HikariCP
jdbc.cp {
  # Main connection pool
  main {
    jdbcUrl  = "jdbc:postgresql://postgres:5432/core"
    username = "core"
    password = "core"
    autoCommit = false
  }
}

testEnv = true

tresql {
  debug = true
  max-result-size = 10000
}

#generate with org.wabase.Authentication.Crypto.newKey:
auth.crypto.key = "this is enough long crypto secret key."
#generate with org.wabase.Authentication.Crypto.newKey:
auth.mac.key = "this is enough long crypto secret key."
